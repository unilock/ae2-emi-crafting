plugins {
    id 'fabric-loom' version '1.4-SNAPSHOT'
    id 'maven-publish'
}

version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    // AE2
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
        content {
            includeGroup "appeng"
        }
    }

    // EMI
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
        content {
            includeGroup "dev.emi"
        }
    }

    // Modrinth Maven
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // EMI
    modCompileOnly "dev.emi:emi-fabric:${project.emi_version}:api"
    modLocalRuntime "dev.emi:emi-fabric:${project.emi_version}"

    // AE2
    modImplementation "appeng:appliedenergistics2-fabric:${project.ae2_version}"
    // AE2WTLib
    modImplementation "maven.modrinth:pNabrMMw:${project.ae2wtlib_version}-fabric"
    // Cloth Config API (Required by AE2WTLib)
    modLocalRuntime "maven.modrinth:9s6osm5g:${project.ccapi_version}+fabric"

}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
